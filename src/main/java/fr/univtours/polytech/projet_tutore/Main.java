package fr.univtours.polytech.projet_tutore;

import fr.univtours.polytech.projet_tutore.model.Stub;
import fr.univtours.polytech.projet_tutore.model.company.Company;
import fr.univtours.polytech.projet_tutore.model.data_manager.ClockingTimeDataManager;
import fr.univtours.polytech.projet_tutore.model.data_manager.CompanyDataManager;
import fr.univtours.polytech.projet_tutore.model.timetracker.ClockingTime;
import fr.univtours.polytech.projet_tutore.view.View;
import fr.univtours.polytech.projet_tutore.view.application.ApplicationView;
import fr.univtours.polytech.projet_tutore.view.timetracker.TimeTrackerView;

import java.io.IOException;
import java.util.ArrayList;

public class Main {
    /**
     * Launch the monitoring application (1) or the time-tracker (2).
     * @param args The arguments to launch the program :
     *             - The application to launch:
     *                  1: Monitoring application.
     *                  2: Time tracker.
     *             - If the application had to generate data with stub method.
     *                  True: Use of data generated by stub method.
     *                  False: Use of the last serialized data.
     */
    public static void main(String[] args) {
        int applicationToLaunch = Integer.parseInt(args[0].split(",")[0]);
        boolean initDataWithStub = Boolean.parseBoolean(args[1].split(",")[0]);

        // If the data should be generated by stub method.
        if (initDataWithStub) {
            generateCompanyFromStub();
            generateClockingTimesFromStub();
        }

        View view;

        // If 2: launch the time tracker.
        if (applicationToLaunch == 2) {
            view = new TimeTrackerView();
        }
        // Else, normally 1, launch the application.
        else {
            view = new ApplicationView();
        }

        view.show();
    }

    /**
     * Generate a company from the stub method and serialize it in the storage file.
     */
    private static void generateCompanyFromStub() {
        Company company = null;
        ArrayList<Company> companyData = new ArrayList<>();
        CompanyDataManager companyDataManager = new CompanyDataManager();

        do {
            company = Stub.generateCompany();
        } while (company == null);

        companyData.add(company);

        try {
            companyDataManager.serialize(companyData);
        } catch (IOException e) {
            e.printStackTrace();
        }
    }

    /**
     * Generate clocking times from the stub method and serialize they in the storage file.
     */
    private static void generateClockingTimesFromStub() {
        ArrayList<ClockingTime> clockingTimes = Stub.getClockingTimeList();
        ClockingTimeDataManager clockingTimeDataManager = new ClockingTimeDataManager();

        try {
            clockingTimeDataManager.serialize(clockingTimes);
        } catch (IOException e) {
            e.printStackTrace();
        }
    }
}
